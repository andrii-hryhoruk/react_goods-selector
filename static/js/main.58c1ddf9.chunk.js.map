{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","title","message","length","firstPart","slice","addGood","item","setState","prevState","removeItem","filter","good","clearGood","this","className","type","onClick","map","classNames","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAuGaC,E,4MA/FbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,MAAQ,WACN,IAEIC,EAFIF,EAAkB,EAAKD,MAAvBC,cAgBR,GAZ6B,IAAzBA,EAAcG,SAChBD,EAAU,qBAGiB,IAAzBF,EAAcG,SAChBD,EAAO,UAAMF,EAAc,GAApB,iBAGoB,IAAzBA,EAAcG,SAChBD,EAAO,UAAMF,EAAc,GAApB,gBAA8BA,EAAc,GAA5C,kBAGLA,EAAcG,QAAU,EAAG,CAC7B,IAAMC,EAAYJ,EAAcK,MAAM,EAAGL,EAAcG,QAEvDD,EAAO,UAAME,EAAN,iBAGT,OAAOF,G,EAGTI,QAAU,SAACC,GACT,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BT,cAAc,GAAD,mBAAMS,EAAUT,eAAhB,CAA+BO,S,EAIhDG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BT,cAAeS,EAAUT,cAAcW,QAAO,SAAAC,GAAI,OAAIA,IAASL,U,EAInEM,UAAY,WACV,EAAKL,SAAS,CAAER,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBc,KAAKf,MAAvBC,cAER,OACE,sBAAKe,UAAU,MAAf,UACE,qBAAIA,UAAU,+CAAd,UACGD,KAAKb,QACLD,EAAcG,QAAU,GACvB,wBACEY,UAAU,mCACVC,KAAK,SACLC,QAAS,kBAAM,EAAKJ,aAHtB,4BASJ,oBAAIE,UAAU,kDAAd,SACGlB,EAAgBqB,KAAI,SAAAN,GAAI,OACvB,qBACEG,UAAWI,IACT,aACA,UACA,CAAE,aAAcnB,EAAcoB,SAASR,KAJ3C,UAQGA,EACD,wBACEG,UAAU,kBACVC,KAAK,SACLC,QAAS,kBACP,EAAKlB,MAAMC,cAAcoB,SAASR,GAC9B,EAAKF,WAAWE,GAChB,EAAKN,QAAQM,IANrB,SASGZ,EAAcoB,SAASR,GACpB,SACA,aAdDA,e,GAxEDS,IAAMC,WCnBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.58c1ddf9.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  title = () => {\n    const { selectedGoods } = this.state;\n\n    let message;\n\n    if (selectedGoods.length === 0) {\n      message = 'No goods selected';\n    }\n\n    if (selectedGoods.length === 1) {\n      message = `${selectedGoods[0]} is selected`;\n    }\n\n    if (selectedGoods.length === 2) {\n      message = `${selectedGoods[0]} and ${selectedGoods[1]} are selected`;\n    }\n\n    if (selectedGoods.length >= 2) {\n      const firstPart = selectedGoods.slice(0, selectedGoods.length);\n\n      message = `${firstPart} are selected`;\n    }\n\n    return message;\n  };\n\n  addGood = (item: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, item],\n    }));\n  };\n\n  removeItem = (item: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: prevState.selectedGoods.filter(good => good !== item),\n    }));\n  };\n\n  clearGood = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\".container-xxl d-flex justify-content-center\">\n          {this.title()}\n          {selectedGoods.length >= 1 && (\n            <button\n              className=\"rounded border-0 btn btn-success\"\n              type=\"button\"\n              onClick={() => this.clearGood()}\n            >\n              Clear items\n            </button>\n          )}\n        </h1>\n        <ul className=\"row row-cols-auto d-flex justify-content-center\">\n          {goodsFromServer.map(good => (\n            <li\n              className={classNames(\n                'w-auto p-3',\n                'rounded',\n                { 'bg-success': selectedGoods.includes(good) },\n              )}\n              key={good}\n            >\n              {good}\n              <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                onClick={() => (\n                  this.state.selectedGoods.includes(good)\n                    ? this.removeItem(good)\n                    : this.addGood(good)\n                )}\n              >\n                {selectedGoods.includes(good)\n                  ? 'Remove'\n                  : 'Select'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}