{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","title","message","length","firstPart","slice","selecetGood","item","setState","prevState","clearGood","this","className","type","onClick","map","good","classNames","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAuFaC,E,4MA/EbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,MAAQ,WACN,IAEIC,EAFIF,EAAkB,EAAKD,MAAvBC,cAYR,GAR6B,IAAzBA,EAAcG,SAChBD,EAAU,qBAGiB,IAAzBF,EAAcG,SAChBD,EAAO,UAAMF,EAAc,GAApB,iBAGLA,EAAcG,QAAU,EAAG,CAC7B,IAAMC,EAAYJ,EAAcK,MAAM,EAAGL,EAAcG,QAEvDD,EAAO,UAAME,EAAN,iBAGT,OAAOF,G,EAGTI,YAAc,SAACC,GACb,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BT,cAAc,GAAD,mBAAMS,EAAUT,eAAhB,CAA+BO,S,EAIhDG,UAAY,WACV,EAAKF,SAAS,CAAER,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBW,KAAKZ,MAAvBC,cAER,OACE,sBAAKY,UAAU,MAAf,UACE,qBAAIA,UAAU,+CAAd,UACGD,KAAKV,QACLD,EAAcG,QAAU,GACvB,wBACES,UAAU,mCACVC,KAAK,SACLC,QAAS,kBAAM,EAAKJ,aAHtB,4BASJ,oBAAIE,UAAU,kDAAd,SACGf,EAAgBkB,KAAI,SAAAC,GAAI,OACvB,qBACEJ,UAAWK,IACT,aACA,UACA,CAAE,aAAcjB,EAAckB,SAASF,KAJ3C,UAQGA,EACD,wBACEJ,UAAU,kBACVC,KAAK,SACLC,QAAS,kBAAM,EAAKR,YAAYU,IAHlC,sBAHKA,e,GA9DDG,IAAMC,WCnBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.18392c26.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  title = () => {\n    const { selectedGoods } = this.state;\n\n    let message;\n\n    if (selectedGoods.length === 0) {\n      message = 'No goods selected';\n    }\n\n    if (selectedGoods.length === 1) {\n      message = `${selectedGoods[0]} is selected`;\n    }\n\n    if (selectedGoods.length >= 2) {\n      const firstPart = selectedGoods.slice(0, selectedGoods.length);\n\n      message = `${firstPart} are selected`;\n    }\n\n    return message;\n  };\n\n  selecetGood = (item: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, item],\n    }));\n  };\n\n  clearGood = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\".container-xxl d-flex justify-content-center\">\n          {this.title()}\n          {selectedGoods.length >= 1 && (\n            <button\n              className=\"rounded border-0 btn btn-success\"\n              type=\"button\"\n              onClick={() => this.clearGood()}\n            >\n              Clear items\n            </button>\n          )}\n        </h1>\n        <ul className=\"row row-cols-auto d-flex justify-content-center\">\n          {goodsFromServer.map(good => (\n            <li\n              className={classNames(\n                'w-auto p-3',\n                'rounded',\n                { 'bg-success': selectedGoods.includes(good) },\n              )}\n              key={good}\n            >\n              {good}\n              <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                onClick={() => this.selecetGood(good)}\n              >\n                Select\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}